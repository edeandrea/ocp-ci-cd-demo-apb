---
  - name: Provision Nexus Operator
    block:
      - name: Log into OpenShift
        k8s_auth:
          username: "{{ ocp_admin }}"
          password: "{{ ocp_admin_pwd }}"
        register: k8s_auth_results

      - name: "Create {{ proj_nm_operators }} project if it doesn't already exist"
        include: ../../common/createProject.yml
        vars:
          proj_nm: "{{ proj_nm_operators }}"

      - name: Download Nexus Operator CRDs
        get_url:
          url: "{{ nexus_operator_crds.baseurl }}{{ item.template_path }}/{{ item.template_nm }}"
          dest: "/tmp/{{ item.template_nm }}"
        loop: "{{ nexus_operator_crds.templates }}"

      - name: Deploy Nexus Operator CRDs
        k8s:
          src: "/tmp/{{ item.template_nm }}"
          namespace: "{{ proj_nm_operators }}"
          api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
          validate_certs: no
        loop: "{{ nexus_operator_crds.templates }}"

      - name: Delete Nexus Operator CRD files
        file:
          state: absent
          path: "/tmp/{{ item.template_nm }}"
        loop: "{{ nexus_operator_crds.templates }}"

      - name: Create nexus-operator ClusterRoleBinding
        k8s:
          api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
          namespace: "{{ proj_nm_operators }}"
          definition: "{{ lookup('template', '../objects/nexus-operator-clusterrolebinding.yml') }}"
          validate_certs: no

      - name: Download Nexus Operator
        get_url:
          url: "{{ nexus_operator_crds.baseurl }}/deploy/operator.yaml"
          dest: /tmp/operator.yaml

      - name: Deploy Nexus Operator
        k8s:
          src: /tmp/operator.yaml
          wait: yes
          namespace: "{{ proj_nm_operators }}"
          api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
          validate_certs: no

      - name: Delete Nexus Operator file
        file:
          state: absent
          path: /tmp/operator.yaml

      - name: "Create {{ proj_nm_infra }} project if it doesn't already exist"
        include: ../../common/createProject.yml
        vars:
          proj_nm: "{{ proj_nm_infra }}"

      - name: Download Nexus instance
        get_url:
          url: "{{ nexus_instance_url }}/{{ nexus_instance_filename }}"
          dest: "/tmp/{{ nexus_instance_filename }}"

      - name: Deploy Nexus instance
        k8s:
          src: "/tmp/{{ nexus_instance_filename }}"
          namespace: "{{ proj_nm_infra }}"
          api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
          validate_certs: no

      - name: Delete Nexus instance file
        file:
          state: absent
          path: "/tmp/{{ nexus_instance_filename }}"

      - name: Get Cluster Wildcard domain
        include: ../../common/getClusterWildcardDomain.yml

      - name: Wait for Nexus to become available
        uri:
          url: "https://nexus-{{ proj_nm_infra }}.{{ cluster_wildcard_domain.resources[0].status.domain }}"
          validate_certs: no
        register: nexus_url
        until: nexus_url.status == 200
        retries: 50
        delay: 10

      - name: Wait for libs-snapshot repo to become available
        uri:
          url: "https://nexus-{{ proj_nm_infra }}.{{ cluster_wildcard_domain.resources[0].status.domain }}/service/rest/v1/repositories"
          validate_certs: no
        register: nexus_repos
        until: nexus_repos.status == 200 and (nexus_repos.json | json_query(repos_query) | length == 1)
        retries: 50
        delay: 10
        vars:
          repos_query: "[?name=='libs-snapshot']"

      - name: Create libs-snapshot publish role
        include: callNexusScript.yml
        vars:
          script_name: create_publish_role

      - name: Create libs-snapshot publish user
        include: callNexusScript.yml
        vars:
          script_name: create_publish_user

    always:
      - name: If OpenShift login succeeded, try to log out
        when: k8s_auth_results.k8s_auth.api_key is defined
        k8s_auth:
          state: absent
          api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
